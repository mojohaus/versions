<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>localhost</groupId>
		<artifactId>grandparent</artifactId>
		<version>1.0</version>
	</parent>

	<artifactId>parent</artifactId>
	<packaging>pom</packaging>

	<modules>
		<module>child</module>
	</modules>

	<dependencyManagement>
		<dependencies>
				<!-- This versionless dependency management of junit:junit is what this case is about:
				it is valid and useful to have a dependency management entry without version in some cases.
				Here, it 'resets' the version defined in grandparent, so that child can inherit it through the imported BOM instead.
				The difference can be seen by running mvn dependency:tree -Dverbose=true with and without it:
				With it you get   : 'junit:junit:jar:4.13.2:compile' through the imported BOM.
				Without it you get: 'junit:junit:jar:4.13.1:compile (version managed from 4.13.2)' through grandparent.
				-->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
			</dependency>

			<dependency>
				<groupId>localhost</groupId>
				<artifactId>bom</artifactId>
				<version>1.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
